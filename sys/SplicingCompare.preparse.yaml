--- 
bowtie2indexensembl.groupby.genome: "cd [% bowtie2indexensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tgunzip -c [% ensembltolustre.ensembl.genome %] > [% bowtie2indexensembl.index.fa %];\n\tbowtie2-build -f [% bowtie2indexensembl.index.fa %] index;\n\teval ${genome[0]}_ensembl_bowtie2=$(pwd)/index;\n\tdeclare -p $( echo ${genome[0]}_ensembl_bowtie2) > [% bowtie2indexensembl.genomeloc %]; 2>[% bowtie2indexensembl.err %]"
bowtie2indexensembl.mem: 10000
bowtie2indexensembl.queue: normal
bowtie2indexgencode.groupby.genome: "cd [% bowtie2indexgencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tgunzip -c [% gencodetolustre.gencode.genome %] > [% bowtie2indexgencode.index.fa %];\n\tbowtie2-build -f [% bowtie2indexgencode.index.fa %] index;\n\teval ${genome[0]}_gencode_bowtie2=$(pwd)/index;\n\tdeclare -p $( echo ${genome[0]}_gencode_bowtie2) > [% bowtie2indexgencode.genomeloc %]; 2>[% bowtie2indexgencode.err %]"
bowtie2indexgencode.mem: 10000
bowtie2indexgencode.queue: long
bowtie2indexrefseq.groupby.genome: "cd [% bowtie2indexrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tgunzip -c [% refseqtolustre.refseq.genome %] > [% bowtie2indexrefseq.index.fa %];\n\tbowtie2-build -f [% bowtie2indexrefseq.index.fa %] index;\n\teval ${genome[0]}_refseq_bowtie2=$(pwd)/index;\n\tdeclare -p $( echo ${genome[0]}_refseq_bowtie2) > [% bowtie2indexrefseq.genomeloc %]; 2>[% bowtie2indexrefseq.err %]"
bowtie2indexrefseq.mem: 10000
bowtie2indexrefseq.queue: long
bowtieindexensembl.groupby.genome: "cd [% bowtieindexensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/bowtie-0.12.8:${PATH}\";\n\tgunzip -c [% ensembltolustre.ensembl.genome %] > [% bowtieindexensembl.index.fa %];\n\tbowtie-build -f [% bowtieindexensembl.index.fa %] [% bowtieindexensembl.index %];\n\teval ${genome[0]}_ensembl_bowtie=$(pwd)/index;\n\tdeclare -p $( echo ${genome[0]}_ensembl_bowtie) > [% bowtieindexensembl.genomeloc %]; 2>[% bowtieindexensembl.err %]"
bowtieindexensembl.mem: 10000
bowtieindexensembl.queue: normal
bowtieindexgencode.groupby.genome: "cd [% bowtieindexgencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/bowtie-0.12.8:${PATH}\";\n\tgunzip -c [% gencodetolustre.gencode.genome %] > [% bowtieindexgencode.index.fa %];\n\tbowtie-build -f [% bowtieindexgencode.index.fa %] [% bowtieindexgencode.index %];\n\teval ${genome[0]}_gencode_bowtie=$(pwd)/index;\n\tdeclare -p $( echo ${genome[0]}_gencode_bowtie) > [% bowtieindexgencode.genomeloc %]; 2>[% bowtieindexgencode.err %]"
bowtieindexgencode.mem: 10000
bowtieindexgencode.queue: normal
bowtieindexrefseq.groupby.genome: "cd [% bowtieindexrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/bowtie-0.12.8:${PATH}\";\n\tgunzip -c [% refseqtolustre.refseq.genome %] > [% bowtieindexrefseq.index.fa %];\n\tbowtie-build -f [% bowtieindexrefseq.index.fa %] [% bowtieindexrefseq.index %];\n\teval ${genome[0]}_refseq_bowtie=$(pwd)/index;\n\tdeclare -p $( echo ${genome[0]}_refseq_bowtie) > [% bowtieindexrefseq.genomeloc %]; 2>[% bowtieindexrefseq.err %]"
bowtieindexrefseq.mem: 10000
bowtieindexrefseq.queue: long
ensembltolustre.groupby.genome: "cd [% ensembltolustre %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tcase ${genome[0]} in\n\t\thg19)\n\t\t\tcp [% input.hg19.ensembl.genome %] [% ensembltolustre.ensembl.genome %];\n\t\t\teval ${genome[0]}_ensembl_genome=$(readlink -f [% ensembltolustre.ensembl.genome %]);\n\t\t\tdeclare -p $( echo ${genome[0]}_ensembl_genome) > [% ensembltolustre.genomeloc %];\n\t\t\tcp [% input.hg19.ensembl.transcriptome %] [% ensembltolustre.ensembl.transcriptome %];\n\t\t\teval ${genome[0]}_ensembl_transcriptome=$(readlink -f [% ensembltolustre.ensembl.transcriptome %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_ensembl_transcriptome) >> [% ensembltolustre.genomeloc %];\n\t\t\tgunzip -c [% input.hg19.ensembl.gtf %] | awk '$3 !~ /^(region)$/'> [% ensembltolustre.ensembl.gtf %];\n\t\t\teval ${genome[0]}_ensembl_gtf=$(readlink -f [% ensembltolustre.ensembl.gtf %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_ensembl_gtf) >> [% ensembltolustre.genomeloc %];\n\t\t\t;;\n\t\tmm10)\n\t\t\tcp [% input.mm10.ensembl.genome %] [% ensembltolustre.ensembl.genome %];\n\t\t\teval ${genome[0]}_ensembl_genome=$(readlink -f [% ensembltolustre.ensembl.genome %]);\n\t\t\tdeclare -p $( echo ${genome[0]}_ensembl_genome) > [% ensembltolustre.genomeloc %];\n\t\t\tcp [% input.mm10.ensembl.transcriptome %] [% ensembltolustre.ensembl.transcriptome %];\n\t\t\teval ${genome[0]}_ensembl_transcriptome=$(readlink -f [% ensembltolustre.ensembl.transcriptome %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_ensembl_transcriptome) >> [% ensembltolustre.genomeloc %];\n\t\t\tgunzip -c [% input.mm10.ensembl.gtf %] | awk '$3 !~ /^(region)$/' > [% ensembltolustre.ensembl.gtf %];\n\t\t\teval ${genome[0]}_ensembl_gtf=$(readlink -f [% ensembltolustre.ensembl.gtf %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_ensembl_gtf) >> [% ensembltolustre.genomeloc %];\n\t\t\t;;\n\t\t*)\n\t\t\t>&2 echo \"Genome Not Supported ${genome[0]}\" & exit 134;\n\tesac 2>[% ensembltolustre.err %]"
ensembltolustre.queue: small
fastqtolustre.: "cd [% fastqtolustre %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tcp [% datasource.location %] [% fastqtolustre.file.fastq.gz %];\n\tcp [% datasource.comparison_location %] [% fastqtolustre.file2.fastq.gz %]; 2>[% fastqtolustre.err %]"
fastqtolustre.queue: small
foldersorter.once: "cd [% foldersorter %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tcat [% jobs.ensembltolustre.genomeloc %] [% jobs.gencodetolustre.genomeloc %] \\\n\t\t[% jobs.refseqtolustre.genomeloc %] [% jobs.bowtieindexensembl.genomeloc %] \\\n\t\t[% jobs.bowtieindexgencode.genomeloc %] [% jobs.bowtieindexrefseq.genomeloc %] \\\n\t\t[% jobs.bowtie2indexensembl.genomeloc %] [% jobs.bowtie2indexgencode.genomeloc %] \\\n\t\t[% jobs.bowtie2indexrefseq.genomeloc %] [% jobs.salmonindexensembl.genomeloc %] \\\n\t\t[% jobs.salmonindexgencode.genomeloc %] [% jobs.salmonindexrefseq.genomeloc %] \\\n\t\t[% jobs.tophattranscriptomeensembl.genomeloc %] [% jobs.tophattranscriptomegencode.genomeloc %] \\\n\t\t[% jobs.tophattranscriptomerefseq.genomeloc %] > [% foldersorter.genomeloc %]; 2>[% foldersorter.err %]"
foldersorter.queue: small
gencodetolustre.groupby.genome: "cd [% gencodetolustre %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tcase ${genome[0]} in\n\t\thg19)\n\t\t\tcp [% input.hg19.gencode.genome %] [% gencodetolustre.gencode.genome %];\n\t\t\teval ${genome[0]}_gencode_genome=$(readlink -f [% gencodetolustre.gencode.genome %]);\n\t\t\tdeclare -p $( echo ${genome[0]}_gencode_genome) > [% gencodetolustre.genomeloc %];\n\t\t\tcp [% input.hg19.gencode.transcriptome %] [% gencodetolustre.gencode.transcriptome %];\n\t\t\teval ${genome[0]}_gencode_transcriptome=$(readlink -f [% gencodetolustre.gencode.transcriptome %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_gencode_transcriptome) >> [% gencodetolustre.genomeloc %];\n\t\t\tgunzip -c [% input.hg19.gencode.gtf %] | awk '$3 !~ /^(region)$/'> [% gencodetolustre.gencode.gtf %];\n\t\t\teval ${genome[0]}_gencode_gtf=$(readlink -f [% gencodetolustre.gencode.gtf %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_gencode_gtf) >> [% gencodetolustre.genomeloc %];\n\t\t\t;;\n\t\tmm10)\n\t\t\tcp [% input.mm10.gencode.genome %] [% gencodetolustre.gencode.genome %];\n\t\t\teval ${genome[0]}_gencode_genome=$(readlink -f [% gencodetolustre.gencode.genome %]);\n\t\t\tdeclare -p $( echo ${genome[0]}_gencode_genome) > [% gencodetolustre.genomeloc %];\n\t\t\tcp [% input.mm10.gencode.transcriptome %] [% gencodetolustre.gencode.transcriptome %];\n\t\t\teval ${genome[0]}_gencode_transcriptome=$(readlink -f [% gencodetolustre.gencode.transcriptome %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_gencode_transcriptome) >> [% gencodetolustre.genomeloc %];\n\t\t\tgunzip -c [% input.mm10.gencode.gtf %] | awk '$3 !~ /^(region)$/'> [% gencodetolustre.gencode.gtf %];\n\t\t\teval ${genome[0]}_gencode_gtf=$(readlink -f [% gencodetolustre.gencode.gtf %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_gencode_gtf) >> [% gencodetolustre.genomeloc %];\n\t\t\t;;\n\t\t*)\n\t\t\t>&2 echo \"Genome Not Supported ${genome[0]}\" & exit 134;\n\tesac 2>[% gencodetolustre.err %]"
gencodetolustre.queue: small
misoensembl.: "cd [% misoensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\tgtf2gff3 ${gtf} > ensembl.gff3;\n\tindex_gff --index ensembl.gff3 indexed/\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\tmiso --run indexed [% tophatensembl.output1 %] --output-dir output --read-len [% datasource.read_length %];\n\t\t\t;;\n\t\tpaired)\n\t\t\tmiso --run indexed [% tophatensembl.output1 %] --paired-end --output-dir .output --read-len [% datasource.read_length %];\n\t\t\t;;\n\tesac;\n\tsummarize_miso --summarize-samples output/ output/ 2>[% misoensembl.err %]"
misoensembl.cores: 8
misoensembl.mem: 20000
misoensemblsample2.: "cd [% misoensemblsample2 %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\tgtf2gff3 ${gtf} > ensembl.gff3;\n\tindex_gff --index ensembl.gff3 indexed/\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\tmiso --run indexed [% tophatensemblsample2.output1 %] --output-dir output --read-len [% datasource.read_length %];\n\t\t\t;;\n\t\tpaired)\n\t\t\tmiso --run indexed [% tophatensemblsample2.output1 %] --paired-end --output-dir output --read-len [% datasource.read_length %];\n\t\t\t;;\n\tesac;\n\tsummarize_miso --summarize-samples output/ output/ 2>[% misoensemblsample2.err %]"
misoensemblsample2.cores: 8
misoensemblsample2.mem: 20000
misoensemblsummarise.: "cd [% misoensemblsummarise %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tcompare_miso --compare-samples [% misoensembl %]/output [% misoensemblsample2 %]/output ./ 2>[% misoensemblsummarise.err %]"
misoensemblsummarise.cores: 8
misoensemblsummarise.mem: 5000
misogencode.: "cd [% misogencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\tgtf2gff3 ${gtf} > gencode.gff3;\n\tindex_gff --index gencode.gff3 indexed/\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\tmiso --run indexed [% tophatgencode.output1 %] --output-dir ./ --read-len [% datasource.read_length %];\n\t\t\t;;\n\t\tpaired)\n\t\t\tmiso --run indexed [% tophatgencode.output1 %] --paired-end --output-dir ./ --read-len [% datasource.read_length %];\n\t\t\t;;\n\tesac 2>[% misogencode.err %]"
misorefseq.: "cd [% misorefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\tgtf2gff3 ${gtf} > refseq.gff3;\n\tindex_gff --index refseq.gff3 indexed/\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\tmiso --run indexed [% tophatrefseq.output1 %] --output-dir ./ --read-len [% datasource.read_length %];\n\t\t\t;;\n\t\tpaired)\n\t\t\tmiso --run indexed [% tophatrefseq.output1 %] --paired-end --output-dir ./ --read-len [% datasource.read_length %];\n\t\t\t;;\n\tesac 2>[% misorefseq.err %]"
refseqtolustre.groupby.genome: "cd [% refseqtolustre %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tcase ${genome[0]} in\n\t\thg19)\n\t\t\tcp [% input.hg19.refseq.genome %] [% refseqtolustre.refseq.genome %];\n\t\t\teval ${genome[0]}_refseq_genome=$(readlink -f [% refseqtolustre.refseq.genome %]);\n\t\t\tdeclare -p $( echo ${genome[0]}_refseq_genome) > [% refseqtolustre.genomeloc %];\n\t\t\tcp [% input.hg19.refseq.transcriptome %] [% refseqtolustre.refseq.transcriptome %];\n\t\t\teval ${genome[0]}_refseq_transcriptome=$(readlink -f [% refseqtolustre.refseq.transcriptome %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_refseq_transcriptome) >> [% refseqtolustre.genomeloc %];\n\t\t\tgunzip -c [% input.hg19.refseq.gtf %] | awk '$3 !~ /^(region)$/' > [% refseqtolustre.refseq.gtf %];\n\t\t\teval ${genome[0]}_refseq_gtf=$(readlink -f [% refseqtolustre.refseq.gtf %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_refseq_gtf) >> [% refseqtolustre.genomeloc %];\n\t\t\t;;\n\t\tmm10)\n\t\t\tcp [% input.mm10.refseq.genome %] [% refseqtolustre.refseq.genome %];\n\t\t\teval ${genome[0]}_refseq_genome=$(readlink -f [% refseqtolustre.refseq.genome %]);\n\t\t\tdeclare -p $( echo ${genome[0]}_refseq_genome) > [% refseqtolustre.genomeloc %];\n\t\t\tcp [% input.mm10.refseq.transcriptome %] [% refseqtolustre.refseq.transcriptome %];\n\t\t\teval ${genome[0]}_refseq_transcriptome=$(readlink -f [% refseqtolustre.refseq.transcriptome %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_refseq_transcriptome) >> [% refseqtolustre.genomeloc %];\n\t\t\tgunzip -c [% input.mm10.refseq.gtf %] | awk '$3 !~ /^(region)$/' > [% refseqtolustre.refseq.gtf %];\n\t\t\teval ${genome[0]}_refseq_gtf=$(readlink -f [% refseqtolustre.refseq.gtf %] );\n\t\t\tdeclare -p $( echo ${genome[0]}_refseq_gtf) >> [% refseqtolustre.genomeloc %];\n\t\t\t;;\n\t\t*)\n\t\t\t>&2 echo \"Genome Not Supported ${genome[0]}\" & exit 134;\n\tesac 2>[% refseqtolustre.err %]"
refseqtolustre.queue: small
rmats32bamensembl.: "cd [% rmats32bamensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\ttranscriptome=${[% datasource.genome %]_ensembl_transcriptome};\n\tgenome=${[% datasource.genome %]_ensembl_genome};\n\tbowtieindex=${[% datasource.genome %]_ensembl_bowtie2};\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.2.1.beta:${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tRNASeq-MATS.py -s1 [% tophatensembl.output1 %] -s2 [% tophatensemblsample2.output1 %] -gtf ${gtf} -bi ${bowtieindex} -o ./ -t [% datasource.frag_type %] -len [% datasource.read_length %]; 2>[% rmats32bamensembl.err %]"
rmats32bamensembl.cores: 16
rmats32bamensembl.mem: 3000
rmats32bamensembl.queue: basement
rmats32bamgencode.: "cd [% rmats32bamgencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\ttranscriptome=${[% datasource.genome %]_gencode_transcriptome};\n\tgenome=${[% datasource.genome %]_gencode_genome};\n\tbowtieindex=${[% datasource.genome %]_gencode_bowtie2};\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.2.1.beta:${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tRNASeq-MATS.py -s1 [% tophatgencode.output1 %] -s2 [% tophatgencodesample2.output1 %] -gtf ${gtf} -bi ${bowtieindex} -o ./ -t [% datasource.frag_type %] -len [% datasource.read_length %]; 2>[% rmats32bamgencode.err %]"
rmats32bamgencode.cores: 16
rmats32bamgencode.mem: 3000
rmats32bamgencode.queue: basement
rmats32bamrefseq.: "cd [% rmats32bamrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\ttranscriptome=${[% datasource.genome %]_refseq_transcriptome};\n\tgenome=${[% datasource.genome %]_refseq_genome};\n\tbowtieindex=${[% datasource.genome %]_refseq_bowtie2};\n\tawk '$3 == \"exon\"' ${gtf} > refseq.gtf;\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.2.1.beta:${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tRNASeq-MATS.py -s1 [% tophatrefseq.output1 %] -s2 [% tophatrefseqsample2.output1 %] -gtf refseq.gtf -bi ${bowtieindex} -o ./ -t [% datasource.frag_type %] -len [% datasource.read_length %]; 2>[% rmats32bamrefseq.err %]"
rmats32bamrefseq.cores: 16
rmats32bamrefseq.mem: 3000
rmats32bamrefseq.queue: basement
rmats32fastqensembl.: "cd [% rmats32fastqensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\ttranscriptome=${[% datasource.genome %]_ensembl_transcriptome};\n\tgenome=${[% datasource.genome %]_ensembl_genome};\n\tbowtieindex=${[% datasource.genome %]_ensembl_bowtie2}\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.2.1.beta:${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tgunzip -c [% fastqtolustre.file.fastq.gz %] > file1.fq;\n\tgunzip -c [% fastqtolustre.file2.fastq.gz %] > file2.fq;\n\tRNASeq-MATS.py -s1 file1.fq -s2 file2.fq -gtf ${gtf} -bi ${bowtieindex} -o [% rmats32fastqensembl %] -t [% datasource.frag_type %] -len [% datasource.read_length %];\n\trm file1.fq file2.fq; 2>[% rmats32fastqensembl.err %]"
rmats32fastqensembl.cores: 16
rmats32fastqensembl.mem: 3000
rmats32fastqensembl.queue: basement
rmats32fastqgencode.: "cd [% rmats32fastqgencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\ttranscriptome=${[% datasource.genome %]_gencode_transcriptome};\n\tgenome=${[% datasource.genome %]_gencode_genome};\n\tbowtieindex=${[% datasource.genome %]_gencode_bowtie2}\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.2.1.beta:${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tgunzip -c [% fastqtolustre.file.fastq.gz %] > file1.fq;\n\tgunzip -c [% fastqtolustre.file2.fastq.gz %] > file2.fq;\n\tRNASeq-MATS.py -s1 file1.fq -s2 file2.fq -gtf ${gtf} -bi ${bowtieindex} -o [% rmats32fastqgencode %] -t [% datasource.frag_type %] -len [% datasource.read_length %];\n\trm file1.fq file2.fq; 2>[% rmats32fastqgencode.err %]"
rmats32fastqgencode.cores: 16
rmats32fastqgencode.mem: 3000
rmats32fastqgencode.queue: basement
rmats32fastqrefseq.: "cd [% rmats32fastqrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\ttranscriptome=${[% datasource.genome %]_refseq_transcriptome};\n\tgenome=${[% datasource.genome %]_refseq_genome};\n\tbowtieindex=${[% datasource.genome %]_refseq_bowtie}\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.2.1.beta:${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tawk '$3 == \"exon\"' ${gtf} > refseq.gtf;\n\tgunzip -c [% fastqtolustre.file.fastq.gz %] > file1.fq;\n\tgunzip -c [% fastqtolustre.file2.fastq.gz %] > file2.fq;\n\tRNASeq-MATS.py -s1 file1.fq -s2 file2.fq -gtf refseq.gtf -bi ${bowtieindex} -o [% rmats32fastqrefseq %] -t [% datasource.frag_type %] -len [% datasource.read_length %];\n\trm file1.fq file2.fq refseq.gtf; 2>[% rmats32fastqrefseq.err %]"
rmats32fastqrefseq.cores: 16
rmats32fastqrefseq.mem: 3000
rmats32fastqrefseq.queue: basement
rmatsbamensembl.: "cd [% rmatsbamensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\ttranscriptome=${[% datasource.genome %]_ensembl_transcriptome};\n\tgenome=${[% datasource.genome %]_ensembl_genome};\n\tbowtieindex=${[% datasource.genome %]_ensembl_bowtie2};\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.0.9/:${ALGORITHMS}/samtools-0.1.19/bin:${PATH}\";\n\tRNASeq-MATS.py -s1 [% tophatensembl.output1 %] -s2 [% tophatensemblsample2.output1 %] -gtf ${gtf} -bi ${bowtieindex} -o ./ -t [% datasource.frag_type %] -len [% datasource.read_length %]; 2>[% rmatsbamensembl.err %]"
rmatsbamensembl.cores: 16
rmatsbamensembl.mem: 3000
rmatsbamensembl.queue: basement
rmatsbamgencode.: "cd [% rmatsbamgencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\ttranscriptome=${[% datasource.genome %]_gencode_transcriptome};\n\tgenome=${[% datasource.genome %]_gencode_genome};\n\tbowtieindex=${[% datasource.genome %]_gencode_bowtie2};\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.0.9/:${ALGORITHMS}/samtools-0.1.19/bin:${PATH}\";\n\tRNASeq-MATS.py -s1 [% tophatgencode.output1 %] -s2 [% tophatgencodesample2.output1 %] -gtf ${gtf} -bi ${bowtieindex} -o ./ -t [% datasource.frag_type %] -len [% datasource.read_length %]; 2>[% rmatsbamgencode.err %]"
rmatsbamgencode.cores: 16
rmatsbamgencode.mem: 3000
rmatsbamgencode.queue: basement
rmatsbamrefseq.: "cd [% rmatsbamrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\ttranscriptome=${[% datasource.genome %]_refseq_transcriptome};\n\tgenome=${[% datasource.genome %]_refseq_genome};\n\tbowtieindex=${[% datasource.genome %]_refseq_bowtie2};\n\tawk '$3 == \"exon\"' ${gtf} > refseq.gtf;\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.0.9/:${ALGORITHMS}/samtools-0.1.19/bin:${PATH}\";\n\tRNASeq-MATS.py -s1 [% tophatrefseq.output1 %] -s2 [% tophatrefseqsample2.output1 %] -gtf refseq.gtf -bi ${bowtieindex} -o ./ -t [% datasource.frag_type %] -len [% datasource.read_length %]; 2>[% rmatsbamrefseq.err %]"
rmatsbamrefseq.cores: 16
rmatsbamrefseq.mem: 3000
rmatsbamrefseq.queue: basement
rmatsfastqensembl.: "cd [% rmatsfastqensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\ttranscriptome=${[% datasource.genome %]_ensembl_transcriptome};\n\tgenome=${[% datasource.genome %]_ensembl_genome};\n\tbowtieindex=${[% datasource.genome %]_ensembl_bowtie}\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.0.9:${ALGORITHMS}/bowtie-0.12.8:${ALGORITHMS}/samtools-0.1.19/bin:${ALGORITHMS}/tophat-1.4.1.Linux_x86_64:${PATH}\";\n\tgunzip -c [% fastqtolustre.file.fastq.gz %] > file1.fq;\n\tgunzip -c [% fastqtolustre.file2.fastq.gz %] > file2.fq;\n\tRNASeq-MATS.py -s1 file1.fq -s2 file2.fq -gtf ${gtf} -bi ${bowtieindex} -o [% rmatsfastqensembl %] -t [% datasource.frag_type %] -len [% datasource.read_length %];\n\trm file1.fq file2.fq; 2>[% rmatsfastqensembl.err %]"
rmatsfastqensembl.cores: 16
rmatsfastqensembl.mem: 3000
rmatsfastqensembl.queue: basement
rmatsfastqgencode.: "cd [% rmatsfastqgencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\ttranscriptome=${[% datasource.genome %]_gencode_transcriptome};\n\tgenome=${[% datasource.genome %]_gencode_genome};\n\tbowtieindex=${[% datasource.genome %]_gencode_bowtie}\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/rMATS.3.0.9:${ALGORITHMS}/bowtie-0.12.8:${ALGORITHMS}/samtools-0.1.19/bin:${ALGORITHMS}/tophat-1.4.1.Linux_x86_64:${PATH}\";\n\tgunzip -c [% fastqtolustre.file.fastq.gz %] > file1.fq;\n\tgunzip -c [% fastqtolustre.file2.fastq.gz %] > file2.fq;\n\tRNASeq-MATS.py -s1 file1.fq -s2 file2.fq -gtf ${gtf} -bi ${bowtieindex} -o [% rmatsfastqgencode %] -t [% datasource.frag_type %] -len [% datasource.read_length %];\n\trm file1.fq file2.fq; 2>[% rmatsfastqgencode.err %]"
rmatsfastqgencode.cores: 16
rmatsfastqgencode.mem: 3000
rmatsfastqgencode.queue: basement
rmatsfastqrefseq.: "cd [% rmatsfastqrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\ttranscriptome=${[% datasource.genome %]_refseq_transcriptome};\n\tgenome=${[% datasource.genome %]_refseq_genome};\n\tbowtieindex=${[% datasource.genome %]_refseq_bowtie}\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/bowtie-0.12.8:${ALGORITHMS}/samtools-0.1.19/bin:${ALGORITHMS}/tophat-1.4.1.Linux_x86_64:${PATH}\";\n\tgunzip -c [% fastqtolustre.file.fastq.gz %] > file1.fq;\n\tgunzip -c [% fastqtolustre.file2.fastq.gz %] > file2.fq;\n\tawk '$3 == \"exon\"' ${gtf} > refseq.gtf;\n\tRNASeq-MATS.py -s1 file1.fq -s2 file2.fq -gtf refseq.gtf -bi ${bowtieindex} -o [% rmatsfastqrefseq %] -t [% datasource.frag_type %] -len [% datasource.read_length %];\n\trm file1.fq file2.fq refseq.gtf; 2>[% rmatsfastqrefseq.err %]"
rmatsfastqrefseq.cores: 16
rmatsfastqrefseq.mem: 3000
rmatsfastqrefseq.queue: basement
salmonensembl.: "cd [% salmonensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\ttranscriptome=${[% datasource.genome %]_ensembl_transcriptome};\n\tgenome=${[% datasource.genome %]_ensembl_genome};\n\tsalmonindex=${[% datasource.genome %]_ensembl_salmon}\n\tset +o posix;\n\tfunction quit { >&2 echo $1; exit 3;}\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -r <(gunzip -cf [% fastqtolustre.file.fastq.gz %]) -o [% salmonensembl %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"single end failed\"; }\n\t\t\t;;\n\t\tpaired)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -1 <(gunzip -cf [% fastqtolustre.file.fastq.gz %]) -2 <(TO BE FILLED IN) -o [% salmonensembl %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"paired-end failed\"; }\n\t\t\t;;\n\t\t*)\n\t\t\tquit \"unknown frag_type\";\n\t\t\t;;\n\tesac; 2>[% salmonensembl.err %]"
salmonensembl.cores: 12
salmonensembl.mem: 10000
salmonensembl.output: libFormatCounts.txt libParams logs quant.genes.sf quant.sf
salmonensembl_sample2.: "cd [% salmonensembl_sample2 %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\ttranscriptome=${[% datasource.genome %]_ensembl_transcriptome};\n\tgenome=${[% datasource.genome %]_ensembl_genome};\n\tsalmonindex=${[% datasource.genome %]_ensembl_salmon}\n\tset +o posix;\n\tfunction quit { >&2 echo $1; exit 3;}\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -r <(gunzip -cf [% fastqtolustre.file2.fastq.gz %]) -o [% salmonensembl_sample2 %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"single end failed\"; }\n\t\t\t;;\n\t\tpaired)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -1 <(gunzip -cf [% fastqtolustre.file2.fastq.gz %]) -2 <(TO BE FILLED IN) -o [% salmonensembl_sample2 %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"paired-end failed\"; }\n\t\t\t;;\n\t\t*)\n\t\t\tquit \"unknown frag_type\";\n\t\t\t;;\n\tesac; 2>[% salmonensembl_sample2.err %]"
salmonensembl_sample2.cores: 12
salmonensembl_sample2.mem: 10000
salmonensembl_sample2.output: libFormatCounts.txt libParams logs quant.genes.sf quant.sf
salmongencode.: "cd [% salmongencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\ttranscriptome=${[% datasource.genome %]_gencode_transcriptome};\n\tgenome=${[% datasource.genome %]_gencode_genome};\n\tsalmonindex=${[% datasource.genome %]_gencode_salmon}\n\tset +o posix;\n\tfunction quit { >&2 echo $1; exit 3;}\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -r <(gunzip -cf [% fastqtolustre.file.fastq.gz %]) -o [% salmongencode %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"single end failed\"; }\n\t\t\t;;\n\t\tpaired)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -1 <(gunzip -cf [% fastqtolustre.file.fastq.gz %]) -2 <(TO BE FILLED IN) -o [% salmongencode %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"paired-end failed\"; }\n\t\t\t;;\n\t\t*)\n\t\t\tquit \"unknown frag_type\";\n\t\t\t;;\n\tesac; 2>[% salmongencode.err %]"
salmongencode.cores: 12
salmongencode.mem: 10000
salmongencode.output: libFormatCounts.txt libParams logs quant.genes.sf quant.sf
salmongencode_sample2.: "cd [% salmongencode_sample2 %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\ttranscriptome=${[% datasource.genome %]_gencode_transcriptome};\n\tgenome=${[% datasource.genome %]_gencode_genome};\n\tsalmonindex=${[% datasource.genome %]_gencode_salmon}\n\tset +o posix;\n\tfunction quit { >&2 echo $1; exit 3;}\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -r <(gunzip -cf [% fastqtolustre.file2.fastq.gz %]) -o [% salmongencode_sample2 %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"single end failed\"; }\n\t\t\t;;\n\t\tpaired)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -1 <(gunzip -cf [% fastqtolustre.file2.fastq.gz %]) -2 <(TO BE FILLED IN) -o [% salmongencode_sample2 %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"paired-end failed\"; }\n\t\t\t;;\n\t\t*)\n\t\t\tquit \"unknown frag_type\";\n\t\t\t;;\n\tesac; 2>[% salmongencode_sample2.err %]"
salmongencode_sample2.cores: 12
salmongencode_sample2.mem: 10000
salmongencode_sample2.output: libFormatCounts.txt libParams logs quant.genes.sf quant.sf
salmonindexensembl.cores: 24
salmonindexensembl.groupby.genome: "cd [% salmonindexensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tset +o posix;\n\tbash <<-EOF\n\tsalmon --no-version-check index -t <(gunzip -c [% ensembltolustre.ensembl.transcriptome %]) -p 24 -i [% salmonindexensembl %] --type quasi -k 31;\n\tEOF\n\teval ${genome[0]}_ensembl_salmon=$(pwd);\n\tdeclare -p $( echo ${genome[0]}_ensembl_salmon) > [% salmonindexensembl.genomeloc %]; 2>[% salmonindexensembl.err %]"
salmonindexensembl.mem: 10000
salmonindexensembl.queue: normal
salmonindexgencode.cores: 24
salmonindexgencode.groupby.genome: "cd [% salmonindexgencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tset +o posix;\n\tbash <<-EOF\n\tsalmon --no-version-check index -t <(gunzip -c [% gencodetolustre.gencode.transcriptome %]) -p 24 -i [% salmonindexgencode %] --type quasi -k 31;\n\tEOF\n\teval ${genome[0]}_gencode_salmon=$(pwd);\n\tdeclare -p $( echo ${genome[0]}_gencode_salmon) > [% salmonindexgencode.genomeloc %]; 2>[% salmonindexgencode.err %]"
salmonindexgencode.mem: 10000
salmonindexgencode.queue: normal
salmonindexrefseq.cores: 24
salmonindexrefseq.groupby.genome: "cd [% salmonindexrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tset +o posix;\n\tbash <<-EOF\n\tsalmon --no-version-check index -t <(gunzip -c [% refseqtolustre.refseq.transcriptome %]) -p 24 -i [% salmonindexrefseq %] --type quasi -k 31;\n\tEOF\n\teval ${genome[0]}_refseq_salmon=$(pwd);\n\tdeclare -p $( echo ${genome[0]}_refseq_salmon) > [% salmonindexrefseq.genomeloc %]; 2>[% salmonindexrefseq.err %]"
salmonindexrefseq.mem: 10000
salmonindexrefseq.queue: normal
salmonrefseq.: "cd [% salmonrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\ttranscriptome=${[% datasource.genome %]_refseq_transcriptome};\n\tgenome=${[% datasource.genome %]_refseq_genome};\n\tsalmonindex=${[% datasource.genome %]_refseq_salmon}\n\tset +o posix;\n\tfunction quit { >&2 echo $1; exit 3;}\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -r <(gunzip -cf [% fastqtolustre.file.fastq.gz %]) -o [% salmonrefseq %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"single end failed\"; }\n\t\t\t;;\n\t\tpaired)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -1 <(gunzip -cf [% fastqtolustre.file.fastq.gz %]) -2 <(TO BE FILLED IN) -o [% salmonrefseq %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"paired-end failed\"; }\n\t\t\t;;\n\t\t*)\n\t\t\tquit \"unknown frag_type\";\n\t\t\t;;\n\tesac; 2>[% salmonrefseq.err %]"
salmonrefseq.cores: 12
salmonrefseq.mem: 10000
salmonrefseq.output: libFormatCounts.txt libParams logs quant.genes.sf quant.sf
salmonrefseq_sample2.: "cd [% salmonrefseq_sample2 %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\ttranscriptome=${[% datasource.genome %]_refseq_transcriptome};\n\tgenome=${[% datasource.genome %]_refseq_genome};\n\tsalmonindex=${[% datasource.genome %]_refseq_salmon}\n\tset +o posix;\n\tfunction quit { >&2 echo $1; exit 3;}\n\tcase [% datasource.frag_type %] in\n\t\tsingle)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -r <(gunzip -cf [% fastqtolustre.file2.fastq.gz %]) -o [% salmonrefseq_sample2 %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"single end failed\"; }\n\t\t\t;;\n\t\tpaired)\n\t\t\t{\n\t\t\t\tbash <<-EOF\n\t\t\t\tsalmon --no-version-check quant -p 12 --useVBOpt --biasCorrect -i ${salmonindex} -l [% datasource.libtype %] -1 <(gunzip -cf [% fastqtolustre.file2.fastq.gz %]) -2 <(TO BE FILLED IN) -o [% salmonrefseq_sample2 %] -g ${gtf};\n\t\t\t\tEOF\n\t\t\t} || { quit \"paired-end failed\"; }\n\t\t\t;;\n\t\t*)\n\t\t\tquit \"unknown frag_type\";\n\t\t\t;;\n\tesac; 2>[% salmonrefseq_sample2.err %]"
salmonrefseq_sample2.cores: 12
salmonrefseq_sample2.mem: 10000
salmonrefseq_sample2.output: libFormatCounts.txt libParams logs quant.genes.sf quant.sf
suppaensembl.: "cd [% suppaensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tset -x;\n\techo -e \"sample1\\tsample2\" > simple.expression;\n\tset +o posix;\n\tbash <<-EOF\n\tpaste <(sed '1d' [% salmonensembl.output5 %] |cut -f 1,4) <(sed '1d' [% salmonensembl_sample2.output5 %] |cut -f 4) >> [% suppaensembl.simple.expression %];\n\tEOF\n\t:\n\tsource [% foldersorter.genomeloc%];\n\tgtf=\"${[% datasource.genome %]_ensembl_gtf}\";\n\ttranscriptome=\"${[% datasource.genome %]_ensembl_transcriptome}\";\n\tgenome=\"${[% datasource.genome %]_ensembl_genome}\";\n\tcase [% datasource.splicing %] in\n\t\tES)\n\t\t\tevent=\"SE\";\n\t\t\t\t;;\n\t\tIR)\n\t\t\tevent=\"RI\";\n\t\t\t;;\n\t\t*)\n\t\t\tevent=\"SE SS MX RI FL\";\n\t\t\t;;\n\tesac;\n\t>&2 echo \"${gtf} ${event}\";\n\t>&2 echo \"suppa generateEvents -i ${gtf} -o suppa.events -e ${event} -p\";\n\tsource ~/.bash_aliases;\n\tsuppa generateEvents -i ${gtf} -o suppa.events -e ${event} -p;\n\tregex=\"suppa.events.([A-Z]+).ioe\";\n\tfor i in *.ioe\n\tdo [[ ${i} =~ ${regex} ]];\n\t\t>&2 echo ${i};\n\t\tname=\"${BASH_REMATCH[1]}\";\n\t\t>&2 echo ${name};\n\t\t>&2 echo \"suppa psiPerEvent --ioe-file $i -e [% suppaensembl.simple.expression %] -o output.$name;\";\n\t\tsuppa psiPerEvent --ioe-file $i -e [% suppaensembl.simple.expression %] -o output.$name;\n\tdone 2>[% suppaensembl.err %]"
suppaensembl.mem: 5000
suppagencode.: "cd [% suppagencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tset -x;\n\techo -e \"sample1\\tsample2\" > simple.expression;\n\tset +o posix;\n\tbash <<-EOF\n\tpaste <(sed '1d' [% salmongencode.output5 %] |cut -f 1,4) <(sed '1d' [% salmongencode_sample2.output5 %] |cut -f 4) >> [% suppagencode.simple.expression %];\n\tEOF\n\t:\n\tsource [% foldersorter.genomeloc%];\n\tgtf=\"${[% datasource.genome %]_gencode_gtf}\";\n\ttranscriptome=\"${[% datasource.genome %]_gencode_transcriptome}\";\n\tgenome=\"${[% datasource.genome %]_gencode_genome}\";\n\tcase [% datasource.splicing %] in\n\t\tES)\n\t\t\tevent=\"SE\";\n\t\t\t\t;;\n\t\tIR)\n\t\t\tevent=\"RI\";\n\t\t\t;;\n\t\t*)\n\t\t\tevent=\"SE SS MX RI FL\";\n\t\t\t;;\n\tesac;\n\t>&2 echo \"${gtf} ${event}\";\n\t>&2 echo \"suppa generateEvents -i ${gtf} -o suppa.events -e ${event} -p\";\n\tsource ~/.bash_aliases;\n\tsuppa generateEvents -i ${gtf} -o suppa.events -e ${event} -p;\n\tregex=\"suppa.events.([A-Z]+).ioe\";\n\tfor i in *.ioe\n\tdo [[ ${i} =~ ${regex} ]];\n\t\t>&2 echo ${i};\n\t\tname=\"${BASH_REMATCH[1]}\";\n\t\t>&2 echo ${name};\n\t\t>&2 echo \"suppa psiPerEvent --ioe-file $i -e [% suppagencode.simple.expression %] -o output.$name;\";\n\t\tsuppa psiPerEvent --ioe-file $i -e [% suppagencode.simple.expression %] -o output.$name;\n\tdone 2>[% suppagencode.err %]"
suppagencode.mem: 5000
supparefseq.: "cd [% supparefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tset -x;\n\techo -e \"sample1\\tsample2\" > simple.expression;\n\tset +o posix;\n\tbash <<-EOF\n\tpaste <(sed '1d' [% salmonrefseq.output5 %] |cut -f 1,4) <(sed '1d' [% salmonrefseq_sample2.output5 %] |cut -f 4) >> [% supparefseq.simple.expression %];\n\tEOF\n\t:\n\tsource [% foldersorter.genomeloc%];\n\tgtf=\"${[% datasource.genome %]_refseq_gtf}\";\n\ttranscriptome=\"${[% datasource.genome %]_refseq_transcriptome}\";\n\tgenome=\"${[% datasource.genome %]_refseq_genome}\";\n\tcase [% datasource.splicing %] in\n\t\tES)\n\t\t\tevent=\"SE\";\n\t\t\t\t;;\n\t\tIR)\n\t\t\tevent=\"RI\";\n\t\t\t;;\n\t\t*)\n\t\t\tevent=\"SE SS MX RI FL\";\n\t\t\t;;\n\tesac;\n\t>&2 echo \"${gtf} ${event}\";\n\t>&2 echo \"suppa generateEvents -i ${gtf} -o suppa.events -e ${event} -p\";\n\tsource ~/.bash_aliases;\n\tsuppa generateEvents -i ${gtf} -o suppa.events -e ${event} -p;\n\tregex=\"suppa.events.([A-Z]+).ioe\";\n\tfor i in *.ioe\n\tdo [[ ${i} =~ ${regex} ]];\n\t\t>&2 echo ${i};\n\t\tname=\"${BASH_REMATCH[1]}\";\n\t\t>&2 echo ${name};\n\t\t>&2 echo \"suppa psiPerEvent --ioe-file $i -e [% supparefseq.simple.expression %] -o output.$name;\";\n\t\tsuppa psiPerEvent --ioe-file $i -e [% supparefseq.simple.expression %] -o output.$name;\n\tdone 2>[% supparefseq.err %]"
supparefseq.mem: 5000
tophatensembl.: "cd [% tophatensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\ttophat=${[% datasource.genome %]_ensembl_tophat};\n\tBOWTIE2_INDEXES=${[% datasource.genome %]_ensembl_bowtie2};\n\ttophat -a 6 -m 0 -g 20 --library-type fr-unstranded --no-novel-indels  -N 3 --segment-mismatches 2 --read-edit-dist 3 -p 12 -o [% tophatensembl %] --transcriptome-index=${tophat} ${BOWTIE2_INDEXES} [% fastqtolustre.file.fastq.gz %];\n\tsamtools index accepted_hits.bam; 2>[% tophatensembl.err %]"
tophatensembl.cores: 12
tophatensembl.mem: 15000
tophatensembl.output: accepted_hits.bam.bai
tophatensembl.queue: long
tophatensemblsample2.: "cd [% tophatensemblsample2 %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tgtf=${[% datasource.genome %]_ensembl_gtf};\n\ttophat=${[% datasource.genome %]_ensembl_tophat};\n\tBOWTIE2_INDEXES=${[% datasource.genome %]_ensembl_bowtie2};\n\ttophat -a 6 -m 0 -g 20 --library-type fr-unstranded --no-novel-indels  -N 3 --segment-mismatches 2 --read-edit-dist 3 -p 12 -o [% tophatensemblsample2 %] --transcriptome-index=${tophat} ${BOWTIE2_INDEXES} [% fastqtolustre.file2.fastq.gz %];\n\tsamtools index accepted_hits.bam; 2>[% tophatensemblsample2.err %]"
tophatensemblsample2.cores: 12
tophatensemblsample2.mem: 15000
tophatensemblsample2.output: accepted_hits.bam.bai
tophatensemblsample2.queue: long
tophatgencode.: "cd [% tophatgencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\ttophat=${[% datasource.genome %]_gencode_tophat};\n\tBOWTIE2_INDEXES=${[% datasource.genome %]_gencode_bowtie2};\n\ttophat -a 6 -m 0 -g 20 --library-type fr-unstranded --no-novel-indels  -N 3 --segment-mismatches 2 --read-edit-dist 3 -p 12 -o [% tophatgencode %] --transcriptome-index=${tophat} ${BOWTIE2_INDEXES} [% fastqtolustre.file.fastq.gz %];\n\tsamtools index accepted_hits.bam; 2>[% tophatgencode.err %]"
tophatgencode.cores: 12
tophatgencode.mem: 15000
tophatgencode.output: accepted_hits.bam.bai
tophatgencode.queue: long
tophatgencodesample2.: "cd [% tophatgencodesample2 %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tgtf=${[% datasource.genome %]_gencode_gtf};\n\ttophat=${[% datasource.genome %]_gencode_tophat};\n\tBOWTIE2_INDEXES=${[% datasource.genome %]_gencode_bowtie2};\n\ttophat -a 6 -m 0 -g 20 --library-type fr-unstranded --no-novel-indels  -N 3 --segment-mismatches 2 --read-edit-dist 3 -p 12 -o [% tophatgencodesample2 %] --transcriptome-index=${tophat} ${BOWTIE2_INDEXES} [% fastqtolustre.file2.fastq.gz %];\n\tsamtools index accepted_hits.bam; 2>[% tophatgencodesample2.err %]"
tophatgencodesample2.cores: 12
tophatgencodesample2.mem: 15000
tophatgencodesample2.output: accepted_hits.bam.bai
tophatgencodesample2.queue: long
tophatrefseq.: "cd [% tophatrefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\ttophat=${[% datasource.genome %]_refseq_tophat};\n\tBOWTIE2_INDEXES=${[% datasource.genome %]_refseq_bowtie2};\n\ttophat -a 6 -m 0 -g 20 --library-type fr-unstranded --no-novel-indels  -N 3 --segment-mismatches 2 --read-edit-dist 3 -p 12 -o [% tophatrefseq %] --transcriptome-index=${tophat} ${BOWTIE2_INDEXES} [% fastqtolustre.file.fastq.gz %];\n\tsamtools index accepted_hits.bam; 2>[% tophatrefseq.err %]"
tophatrefseq.cores: 12
tophatrefseq.mem: 15000
tophatrefseq.output: accepted_hits.bam.bai
tophatrefseq.queue: long
tophatrefseqsample2.: "cd [% tophatrefseqsample2 %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% foldersorter.genomeloc%];\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tgtf=${[% datasource.genome %]_refseq_gtf};\n\ttophat=${[% datasource.genome %]_refseq_tophat};\n\tBOWTIE2_INDEXES=${[% datasource.genome %]_refseq_bowtie2};\n\ttophat -a 6 -m 0 -g 20 --library-type fr-unstranded --no-novel-indels  -N 3 --segment-mismatches 2 --read-edit-dist 3 -p 12 -o [% tophatrefseqsample2 %] --transcriptome-index=${tophat} ${BOWTIE2_INDEXES} [% fastqtolustre.file2.fastq.gz %];\n\tsamtools index accepted_hits.bam; 2>[% tophatrefseqsample2.err %]"
tophatrefseqsample2.cores: 12
tophatrefseqsample2.mem: 15000
tophatrefseqsample2.output: accepted_hits.bam.bai
tophatrefseqsample2.queue: long
tophattranscriptomeensembl.groupby.genome: "cd [% tophattranscriptomeensembl %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tBOWTIE2_INDEXES=[% bowtie2indexensembl %];\n\ttophat -G [% ensembltolustre.ensembl.gtf %] --transcriptome-index=index ${BOWTIE2_INDEXES}/index;\n\teval ${genome[0]}_ensembl_tophat=$(pwd)/index/ensembl;\n\tdeclare -p $( echo ${genome[0]}_ensembl_tophat) > [% tophattranscriptomeensembl.genomeloc %]; 2>[% tophattranscriptomeensembl.err %]"
tophattranscriptomeensembl.mem: 5000
tophattranscriptomeensembl.queue: long
tophattranscriptomegencode.groupby.genome: "cd [% tophattranscriptomegencode %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tBOWTIE2_INDEXES=[% bowtie2indexgencode %];\n\ttophat -G [% gencodetolustre.gencode.gtf %] --transcriptome-index ./index ${BOWTIE2_INDEXES}/index;\n\teval ${genome[0]}_gencode_tophat=$(pwd)/index/gencode;\n\tdeclare -p $( echo ${genome[0]}_gencode_tophat) > [% tophattranscriptomegencode.genomeloc %]; 2>[% tophattranscriptomegencode.err %]"
tophattranscriptomegencode.mem: 5000
tophattranscriptomegencode.queue: long
tophattranscriptomerefseq.groupby.genome: "cd [% tophattranscriptomerefseq %];  ls -d * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgenome=([% groupby.genome.datasource.genome %]);\n\tALGORITHMS=\"/software/team113/algorithms\";\n\tPATH=\"${ALGORITHMS}/tophat2.1.0/tophat-2.1.0.Linux_x86_64/:${PATH}\";\n\tBOWTIE2_INDEXES=[% bowtie2indexrefseq %];\n\ttophat -G [% refseqtolustre.refseq.gtf %] --transcriptome-index ./index ${BOWTIE2_INDEXES}/index;\n\teval ${genome[0]}_refseq_tophat=$(pwd)/index/refseq;\n\tdeclare -p $( echo ${genome[0]}_refseq_tophat) > [% tophattranscriptomerefseq.genomeloc %]; 2>[% tophattranscriptomerefseq.err %]"
tophattranscriptomerefseq.mem: 5000
tophattranscriptomerefseq.queue: long
